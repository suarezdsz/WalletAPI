// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model Users {
 id                String    @id @default(uuid())
 name              String    @db.VarChar(45)
 lastname          String    @db.VarChar(45)
 email             String    @db.VarChar(45) @unique
 password          String    @db.VarChar(99)
 biometric         String?    @db.VarChar(99)
 phone             Int       @db.Int
 status            Boolean   @default(false)
 confirm_email     Boolean?  @default(false)
 reset_status_pass Boolean?  @default(false)
 verific_code      String?   @db.VarChar(45) 
 created_at        DateTime  @default(now())
 products          Products[]
 code_reference    String    @db.VarChar(45)
 references        References[]
 group_reference   Group_Reference[]
}

model Wallets {
  id            String   @id @default(uuid())
  user_id       String   @db.VarChar(99)
  name          String   @db.VarChar(45)
  login         String   @db.VarChar(99)
  password      String   @db.VarChar(99)
  address_btc   String?  @db.VarChar(99)
  type          String   @db.VarChar(45)
  refresh_token String   @db.VarChar(99)
  access_token  String   @db.VarChar(99)
  status        Boolean  @default(false)
  sats          Int?     @db.Int
  usd           Decimal? @db.Decimal(12,5)
  created_at    DateTime @default(now())
}


model Fiat {
  id            String   @id @default(uuid())
  type          String   @db.VarChar(45) @unique
  currency      String   @db.VarChar(99)
  status        Boolean? @default(false)
  value_rate    Decimal  @db.Decimal(12,5)
  created_at    DateTime @default(now())
}

model Categories {
  id            String   @id @default(uuid())
  name          String   @db.VarChar(45)
  user_id       String   @default(uuid())
  created_at    DateTime @default(now())

}

model Products {
  id            String   @id @default(uuid())
  user          Users    @relation(fields: [user_id], references: [id])
  user_id       String   @default(uuid())
  name          String   @db.VarChar(45)
  currency      String   @db.VarChar(10)
  price         Decimal  @db.Decimal(12,5)
  img           String?  @db.VarChar(45)
  created_at    DateTime @default(now())
}

model References {
  id                 String   @id @default(uuid())
  user_id            String   @default(uuid())
  user               Users    @relation(fields: [user_id], references: [id])
  code_reference     String   @db.VarChar(45)
  status             Boolean
  created_at         DateTime @default(now())
  group_reference   Group_Reference[]
  @@unique(fields: [code_reference], name: "reference")
}

model Group_Reference {
  id                 String     @id @default(uuid())
  reference_id       String     @default(uuid())
  reference          References  @relation(fields: [reference_id], references: [id])
  user               Users      @relation(fields: [user_refered], references: [id])
  user_refered       String     @default(uuid())
  created_at         DateTime     @default(now())
}